Version 4.0 HI-TECH Software Intermediate Code
"16 MW.c
[; ;MW.c: 16: static tSens_State Weight_State = Released;
[c E2127 0 1 .. ]
[n E2127 . Released Pressed  ]
"19
[; ;MW.c: 19: static tMW_State Current_MW_State = WELCOME;
[c E2117 0 1 2 3 4 5 6 7 .. ]
[n E2117 . WELCOME SCAN_MIN_TENS SCAN_MIN_UNITS SCAN_SEC_TENS SCAN_SEC_UNITS START_COUNT CANCEL FINISHED  ]
"20
[; ;MW.c: 20: static tCount_State Current_Count_State = Reset_Time;
[c E2131 0 1 2 3 4 5 .. ]
[n E2131 . Wait_Food Wait_Door Count_Time Pause_Time Reset_Time Finish_Time  ]
"30
[; ;MW.c: 30:     static tByte Pressed_Key = Key_INIT ;
[c E2204 0 1 2 3 4 5 6 7 8 9 10 11 12 .. ]
[n E2204 . key_0 key_1 key_2 key_3 key_4 key_5 key_6 key_7 key_8 key_9 KEY_CANCEL KEY_START Key_INIT  ]
"25 ./Time.h
[; ;./Time.h: 25: void Set_TIM_Current_Count_State (tCount_State );
[v _Set_TIM_Current_Count_State `(v ~T0 @X0 0 ef1`E2131 ]
"57 ./Disp.h
[; ;./Disp.h: 57: void Set_Disp_Current_Count_State (tCount_State);
[v _Set_Disp_Current_Count_State `(v ~T0 @X0 0 ef1`E2131 ]
"32 ./keypad.h
[; ;./keypad.h: 32: tByte Keypad_Get_Data_From_buffer(tByte *pKey);
[v _Keypad_Get_Data_From_buffer `(uc ~T0 @X0 0 ef1`*uc ]
"51 MW.c
[; ;MW.c: 51:         DO_SetState(Heater , ON);
[c E2174 0 1 2 3 .. ]
[n E2174 . Heater Motor Lamp_1 Lamp_2  ]
[c E2180 0 1 .. ]
[n E2180 . OFF ON  ]
"30 ./DO.h
[; ;./DO.h: 30: void DO_SetState(tDO device ,tDO_State state);
[v _DO_SetState `(v ~T0 @X0 0 ef2`E2174`E2180 ]
"31
[; ;./DO.h: 31: void Toggle_Lamps (void);
[v _Toggle_Lamps `(v ~T0 @X0 0 ef ]
"68 MW.c
[; ;MW.c: 68:     if(SW_GetState(WEIGHT_SW) == SW_PRESSED)
[c E2189 0 1 .. ]
[n E2189 . DOOR_SW WEIGHT_SW  ]
[c E2193 0 1 2 3 .. ]
[n E2193 . SW_RELEASED SW_PRE_PRESSED SW_PRESSED SW_PRE_RELEASED  ]
"19 ./SW.h
[; ;./SW.h: 19: tSW_State SW_GetState(tSW sw);
[v _SW_GetState `(E2193 ~T0 @X0 0 ef1`E2189 ]
"56 ./Disp.h
[; ;./Disp.h: 56: void Set_Disp_State (tMW_State);
[v _Set_Disp_State `(v ~T0 @X0 0 ef1`E2117 ]
"20 ./LCD.h
[; ;./LCD.h: 20: void LCD_Clear(void);
[v _LCD_Clear `(v ~T0 @X0 0 ef ]
"23 ./Time.h
[; ;./Time.h: 23: void Set_Time(tByte minutes_tens , tByte minutes_units , tByte seconds_tens , tByte seconds_units);
[v _Set_Time `(v ~T0 @X0 0 ef4`uc`uc`uc`uc ]
"24
[; ;./Time.h: 24: tByte Is_Finished (void);
[v _Is_Finished `(uc ~T0 @X0 0 ef ]
"22 ./LCD.h
[; ;./LCD.h: 22: void Set_LCD_BUFFER1 (tByte *BUF_1 );
[v _Set_LCD_BUFFER1 `(v ~T0 @X0 0 ef1`*uc ]
"23
[; ;./LCD.h: 23: void Set_LCD_BUFFER2 (tByte *BUF_2 );
[v _Set_LCD_BUFFER2 `(v ~T0 @X0 0 ef1`*uc ]
"54 C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 54: __asm("PORTA equ 0F80h");
[; <" PORTA equ 0F80h ;# ">
"199
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 199: __asm("PORTB equ 0F81h");
[; <" PORTB equ 0F81h ;# ">
"324
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 324: __asm("PORTC equ 0F82h");
[; <" PORTC equ 0F82h ;# ">
"491
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 491: __asm("PORTD equ 0F83h");
[; <" PORTD equ 0F83h ;# ">
"612
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 612: __asm("PORTE equ 0F84h");
[; <" PORTE equ 0F84h ;# ">
"724
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 724: __asm("LATA equ 0F89h");
[; <" LATA equ 0F89h ;# ">
"824
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 824: __asm("LATB equ 0F8Ah");
[; <" LATB equ 0F8Ah ;# ">
"936
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 936: __asm("LATC equ 0F8Bh");
[; <" LATC equ 0F8Bh ;# ">
"1048
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 1048: __asm("LATD equ 0F8Ch");
[; <" LATD equ 0F8Ch ;# ">
"1160
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 1160: __asm("LATE equ 0F8Dh");
[; <" LATE equ 0F8Dh ;# ">
"1212
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 1212: __asm("TRISA equ 0F92h");
[; <" TRISA equ 0F92h ;# ">
"1217
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 1217: __asm("DDRA equ 0F92h");
[; <" DDRA equ 0F92h ;# ">
"1410
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 1410: __asm("TRISB equ 0F93h");
[; <" TRISB equ 0F93h ;# ">
"1415
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 1415: __asm("DDRB equ 0F93h");
[; <" DDRB equ 0F93h ;# ">
"1650
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 1650: __asm("TRISC equ 0F94h");
[; <" TRISC equ 0F94h ;# ">
"1655
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 1655: __asm("DDRC equ 0F94h");
[; <" DDRC equ 0F94h ;# ">
"1890
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 1890: __asm("TRISD equ 0F95h");
[; <" TRISD equ 0F95h ;# ">
"1895
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 1895: __asm("DDRD equ 0F95h");
[; <" DDRD equ 0F95h ;# ">
"2112
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2112: __asm("TRISE equ 0F96h");
[; <" TRISE equ 0F96h ;# ">
"2117
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2117: __asm("DDRE equ 0F96h");
[; <" DDRE equ 0F96h ;# ">
"2264
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2264: __asm("PIE1 equ 0F9Dh");
[; <" PIE1 equ 0F9Dh ;# ">
"2341
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2341: __asm("PIR1 equ 0F9Eh");
[; <" PIR1 equ 0F9Eh ;# ">
"2418
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2418: __asm("IPR1 equ 0F9Fh");
[; <" IPR1 equ 0F9Fh ;# ">
"2495
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2495: __asm("PIE2 equ 0FA0h");
[; <" PIE2 equ 0FA0h ;# ">
"2539
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2539: __asm("PIR2 equ 0FA1h");
[; <" PIR2 equ 0FA1h ;# ">
"2583
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2583: __asm("IPR2 equ 0FA2h");
[; <" IPR2 equ 0FA2h ;# ">
"2627
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2627: __asm("EECON1 equ 0FA6h");
[; <" EECON1 equ 0FA6h ;# ">
"2693
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2693: __asm("EECON2 equ 0FA7h");
[; <" EECON2 equ 0FA7h ;# ">
"2700
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2700: __asm("EEDATA equ 0FA8h");
[; <" EEDATA equ 0FA8h ;# ">
"2707
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2707: __asm("EEADR equ 0FA9h");
[; <" EEADR equ 0FA9h ;# ">
"2714
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2714: __asm("RCSTA equ 0FABh");
[; <" RCSTA equ 0FABh ;# ">
"2719
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2719: __asm("RCSTA1 equ 0FABh");
[; <" RCSTA1 equ 0FABh ;# ">
"2938
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2938: __asm("TXSTA equ 0FACh");
[; <" TXSTA equ 0FACh ;# ">
"2943
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 2943: __asm("TXSTA1 equ 0FACh");
[; <" TXSTA1 equ 0FACh ;# ">
"3206
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3206: __asm("TXREG equ 0FADh");
[; <" TXREG equ 0FADh ;# ">
"3211
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3211: __asm("TXREG1 equ 0FADh");
[; <" TXREG1 equ 0FADh ;# ">
"3218
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3218: __asm("RCREG equ 0FAEh");
[; <" RCREG equ 0FAEh ;# ">
"3223
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3223: __asm("RCREG1 equ 0FAEh");
[; <" RCREG1 equ 0FAEh ;# ">
"3230
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3230: __asm("SPBRG equ 0FAFh");
[; <" SPBRG equ 0FAFh ;# ">
"3235
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3235: __asm("SPBRG1 equ 0FAFh");
[; <" SPBRG1 equ 0FAFh ;# ">
"3242
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3242: __asm("T3CON equ 0FB1h");
[; <" T3CON equ 0FB1h ;# ">
"3363
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3363: __asm("TMR3 equ 0FB2h");
[; <" TMR3 equ 0FB2h ;# ">
"3370
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3370: __asm("TMR3L equ 0FB2h");
[; <" TMR3L equ 0FB2h ;# ">
"3377
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3377: __asm("TMR3H equ 0FB3h");
[; <" TMR3H equ 0FB3h ;# ">
"3384
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3384: __asm("CCP2CON equ 0FBAh");
[; <" CCP2CON equ 0FBAh ;# ">
"3472
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3472: __asm("CCPR2 equ 0FBBh");
[; <" CCPR2 equ 0FBBh ;# ">
"3479
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3479: __asm("CCPR2L equ 0FBBh");
[; <" CCPR2L equ 0FBBh ;# ">
"3486
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3486: __asm("CCPR2H equ 0FBCh");
[; <" CCPR2H equ 0FBCh ;# ">
"3493
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3493: __asm("CCP1CON equ 0FBDh");
[; <" CCP1CON equ 0FBDh ;# ">
"3572
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3572: __asm("CCPR1 equ 0FBEh");
[; <" CCPR1 equ 0FBEh ;# ">
"3579
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3579: __asm("CCPR1L equ 0FBEh");
[; <" CCPR1L equ 0FBEh ;# ">
"3586
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3586: __asm("CCPR1H equ 0FBFh");
[; <" CCPR1H equ 0FBFh ;# ">
"3593
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3593: __asm("ADCON1 equ 0FC1h");
[; <" ADCON1 equ 0FC1h ;# ">
"3661
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3661: __asm("ADCON0 equ 0FC2h");
[; <" ADCON0 equ 0FC2h ;# ">
"3802
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3802: __asm("ADRES equ 0FC3h");
[; <" ADRES equ 0FC3h ;# ">
"3809
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3809: __asm("ADRESL equ 0FC3h");
[; <" ADRESL equ 0FC3h ;# ">
"3816
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3816: __asm("ADRESH equ 0FC4h");
[; <" ADRESH equ 0FC4h ;# ">
"3823
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3823: __asm("SSPCON2 equ 0FC5h");
[; <" SSPCON2 equ 0FC5h ;# ">
"3885
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3885: __asm("SSPCON1 equ 0FC6h");
[; <" SSPCON1 equ 0FC6h ;# ">
"3955
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 3955: __asm("SSPSTAT equ 0FC7h");
[; <" SSPSTAT equ 0FC7h ;# ">
"4212
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4212: __asm("SSPADD equ 0FC8h");
[; <" SSPADD equ 0FC8h ;# ">
"4219
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4219: __asm("SSPBUF equ 0FC9h");
[; <" SSPBUF equ 0FC9h ;# ">
"4226
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4226: __asm("T2CON equ 0FCAh");
[; <" T2CON equ 0FCAh ;# ">
"4297
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4297: __asm("PR2 equ 0FCBh");
[; <" PR2 equ 0FCBh ;# ">
"4302
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4302: __asm("MEMCON equ 0FCBh");
[; <" MEMCON equ 0FCBh ;# ">
"4407
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4407: __asm("TMR2 equ 0FCCh");
[; <" TMR2 equ 0FCCh ;# ">
"4414
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4414: __asm("T1CON equ 0FCDh");
[; <" T1CON equ 0FCDh ;# ">
"4521
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4521: __asm("TMR1 equ 0FCEh");
[; <" TMR1 equ 0FCEh ;# ">
"4528
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4528: __asm("TMR1L equ 0FCEh");
[; <" TMR1L equ 0FCEh ;# ">
"4535
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4535: __asm("TMR1H equ 0FCFh");
[; <" TMR1H equ 0FCFh ;# ">
"4542
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4542: __asm("RCON equ 0FD0h");
[; <" RCON equ 0FD0h ;# ">
"4685
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4685: __asm("WDTCON equ 0FD1h");
[; <" WDTCON equ 0FD1h ;# ">
"4713
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4713: __asm("LVDCON equ 0FD2h");
[; <" LVDCON equ 0FD2h ;# ">
"4771
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4771: __asm("OSCCON equ 0FD3h");
[; <" OSCCON equ 0FD3h ;# ">
"4791
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4791: __asm("T0CON equ 0FD5h");
[; <" T0CON equ 0FD5h ;# ">
"4861
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4861: __asm("TMR0 equ 0FD6h");
[; <" TMR0 equ 0FD6h ;# ">
"4868
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4868: __asm("TMR0L equ 0FD6h");
[; <" TMR0L equ 0FD6h ;# ">
"4875
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4875: __asm("TMR0H equ 0FD7h");
[; <" TMR0H equ 0FD7h ;# ">
"4882
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4882: __asm("STATUS equ 0FD8h");
[; <" STATUS equ 0FD8h ;# ">
"4953
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4953: __asm("FSR2 equ 0FD9h");
[; <" FSR2 equ 0FD9h ;# ">
"4960
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4960: __asm("FSR2L equ 0FD9h");
[; <" FSR2L equ 0FD9h ;# ">
"4967
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4967: __asm("FSR2H equ 0FDAh");
[; <" FSR2H equ 0FDAh ;# ">
"4974
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4974: __asm("PLUSW2 equ 0FDBh");
[; <" PLUSW2 equ 0FDBh ;# ">
"4981
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4981: __asm("PREINC2 equ 0FDCh");
[; <" PREINC2 equ 0FDCh ;# ">
"4988
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4988: __asm("POSTDEC2 equ 0FDDh");
[; <" POSTDEC2 equ 0FDDh ;# ">
"4995
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 4995: __asm("POSTINC2 equ 0FDEh");
[; <" POSTINC2 equ 0FDEh ;# ">
"5002
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5002: __asm("INDF2 equ 0FDFh");
[; <" INDF2 equ 0FDFh ;# ">
"5009
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5009: __asm("BSR equ 0FE0h");
[; <" BSR equ 0FE0h ;# ">
"5016
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5016: __asm("FSR1 equ 0FE1h");
[; <" FSR1 equ 0FE1h ;# ">
"5023
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5023: __asm("FSR1L equ 0FE1h");
[; <" FSR1L equ 0FE1h ;# ">
"5030
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5030: __asm("FSR1H equ 0FE2h");
[; <" FSR1H equ 0FE2h ;# ">
"5037
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5037: __asm("PLUSW1 equ 0FE3h");
[; <" PLUSW1 equ 0FE3h ;# ">
"5044
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5044: __asm("PREINC1 equ 0FE4h");
[; <" PREINC1 equ 0FE4h ;# ">
"5051
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5051: __asm("POSTDEC1 equ 0FE5h");
[; <" POSTDEC1 equ 0FE5h ;# ">
"5058
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5058: __asm("POSTINC1 equ 0FE6h");
[; <" POSTINC1 equ 0FE6h ;# ">
"5065
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5065: __asm("INDF1 equ 0FE7h");
[; <" INDF1 equ 0FE7h ;# ">
"5072
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5072: __asm("WREG equ 0FE8h");
[; <" WREG equ 0FE8h ;# ">
"5084
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5084: __asm("FSR0 equ 0FE9h");
[; <" FSR0 equ 0FE9h ;# ">
"5091
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5091: __asm("FSR0L equ 0FE9h");
[; <" FSR0L equ 0FE9h ;# ">
"5098
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5098: __asm("FSR0H equ 0FEAh");
[; <" FSR0H equ 0FEAh ;# ">
"5105
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5105: __asm("PLUSW0 equ 0FEBh");
[; <" PLUSW0 equ 0FEBh ;# ">
"5112
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5112: __asm("PREINC0 equ 0FECh");
[; <" PREINC0 equ 0FECh ;# ">
"5119
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5119: __asm("POSTDEC0 equ 0FEDh");
[; <" POSTDEC0 equ 0FEDh ;# ">
"5126
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5126: __asm("POSTINC0 equ 0FEEh");
[; <" POSTINC0 equ 0FEEh ;# ">
"5133
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5133: __asm("INDF0 equ 0FEFh");
[; <" INDF0 equ 0FEFh ;# ">
"5140
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5140: __asm("INTCON3 equ 0FF0h");
[; <" INTCON3 equ 0FF0h ;# ">
"5232
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5232: __asm("INTCON2 equ 0FF1h");
[; <" INTCON2 equ 0FF1h ;# ">
"5309
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5309: __asm("INTCON equ 0FF2h");
[; <" INTCON equ 0FF2h ;# ">
"5314
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5314: __asm("INTCON1 equ 0FF2h");
[; <" INTCON1 equ 0FF2h ;# ">
"5541
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5541: __asm("PROD equ 0FF3h");
[; <" PROD equ 0FF3h ;# ">
"5548
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5548: __asm("PRODL equ 0FF3h");
[; <" PRODL equ 0FF3h ;# ">
"5555
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5555: __asm("PRODH equ 0FF4h");
[; <" PRODH equ 0FF4h ;# ">
"5562
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5562: __asm("TABLAT equ 0FF5h");
[; <" TABLAT equ 0FF5h ;# ">
"5571
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5571: __asm("TBLPTR equ 0FF6h");
[; <" TBLPTR equ 0FF6h ;# ">
"5578
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5578: __asm("TBLPTRL equ 0FF6h");
[; <" TBLPTRL equ 0FF6h ;# ">
"5585
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5585: __asm("TBLPTRH equ 0FF7h");
[; <" TBLPTRH equ 0FF7h ;# ">
"5592
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5592: __asm("TBLPTRU equ 0FF8h");
[; <" TBLPTRU equ 0FF8h ;# ">
"5601
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5601: __asm("PCLAT equ 0FF9h");
[; <" PCLAT equ 0FF9h ;# ">
"5608
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5608: __asm("PC equ 0FF9h");
[; <" PC equ 0FF9h ;# ">
"5615
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5615: __asm("PCL equ 0FF9h");
[; <" PCL equ 0FF9h ;# ">
"5622
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5622: __asm("PCLATH equ 0FFAh");
[; <" PCLATH equ 0FFAh ;# ">
"5629
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5629: __asm("PCLATU equ 0FFBh");
[; <" PCLATU equ 0FFBh ;# ">
"5636
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5636: __asm("STKPTR equ 0FFCh");
[; <" STKPTR equ 0FFCh ;# ">
"5742
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5742: __asm("TOS equ 0FFDh");
[; <" TOS equ 0FFDh ;# ">
"5749
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5749: __asm("TOSL equ 0FFDh");
[; <" TOSL equ 0FFDh ;# ">
"5756
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5756: __asm("TOSH equ 0FFEh");
[; <" TOSH equ 0FFEh ;# ">
"5763
[; ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\include\pic18f452.h: 5763: __asm("TOSU equ 0FFFh");
[; <" TOSU equ 0FFFh ;# ">
"16 MW.c
[; ;MW.c: 16: static tSens_State Weight_State = Released;
[v _Weight_State `E2127 ~T0 @X0 1 s ]
[i _Weight_State
. `E2127 0
]
"17
[; ;MW.c: 17: static tSens_State Door_State = Released;
[v _Door_State `E2127 ~T0 @X0 1 s ]
[i _Door_State
. `E2127 0
]
"19
[; ;MW.c: 19: static tMW_State Current_MW_State = WELCOME;
[v _Current_MW_State `E2117 ~T0 @X0 1 s ]
[i _Current_MW_State
. `E2117 0
]
"20
[; ;MW.c: 20: static tCount_State Current_Count_State = Reset_Time;
[v _Current_Count_State `E2131 ~T0 @X0 1 s ]
[i _Current_Count_State
. `E2131 4
]
"24
[; ;MW.c: 24: void MW_Update (void)
[v _MW_Update `(v ~T0 @X0 1 ef ]
"25
[; ;MW.c: 25: {
{
[e :U _MW_Update ]
[f ]
"26
[; ;MW.c: 26:     static tByte Min_Unit_val = 0;
[v F2248 `uc ~T0 @X0 1 s Min_Unit_val ]
[i F2248
-> -> 0 `i `uc
]
"27
[; ;MW.c: 27:     static tByte Min_Ten_val = 0;
[v F2249 `uc ~T0 @X0 1 s Min_Ten_val ]
[i F2249
-> -> 0 `i `uc
]
"28
[; ;MW.c: 28:     static tByte Sec_Unit_val = 0;
[v F2250 `uc ~T0 @X0 1 s Sec_Unit_val ]
[i F2250
-> -> 0 `i `uc
]
"29
[; ;MW.c: 29:     static tByte Sec_Ten_val = 0;
[v F2251 `uc ~T0 @X0 1 s Sec_Ten_val ]
[i F2251
-> -> 0 `i `uc
]
"30
[; ;MW.c: 30:     static tByte Pressed_Key = Key_INIT ;
[v F2252 `uc ~T0 @X0 1 s Pressed_Key ]
[i F2252
-> . `E2204 12 `uc
]
"31
[; ;MW.c: 31:     tWord Time_Val = Min_Unit_val + Min_Ten_val + Sec_Unit_val + Sec_Ten_val;
[v _Time_Val `ui ~T0 @X0 1 a ]
[e = _Time_Val -> + + + -> F2248 `i -> F2249 `i -> F2250 `i -> F2251 `i `ui ]
"33
[; ;MW.c: 33:     static tByte MW_Update_Counter = 10;
[v F2254 `uc ~T0 @X0 1 s MW_Update_Counter ]
[i F2254
-> -> 10 `i `uc
]
"34
[; ;MW.c: 34:     MW_Update_Counter += (10);
[e =+ F2254 -> -> 10 `i `uc ]
"35
[; ;MW.c: 35:     if(MW_Update_Counter != (50))
[e $ ! != -> F2254 `i -> 50 `i 240  ]
"36
[; ;MW.c: 36:     {
{
"37
[; ;MW.c: 37:         return;
[e $UE 239  ]
"38
[; ;MW.c: 38:     }
}
[e :U 240 ]
"39
[; ;MW.c: 39:     MW_Update_Counter = 0;
[e = F2254 -> -> 0 `i `uc ]
"41
[; ;MW.c: 41:     Set_TIM_Current_Count_State (Current_Count_State);
[e ( _Set_TIM_Current_Count_State (1 _Current_Count_State ]
"42
[; ;MW.c: 42:     Set_Disp_Current_Count_State (Current_Count_State);
[e ( _Set_Disp_Current_Count_State (1 _Current_Count_State ]
"44
[; ;MW.c: 44:     if(Keypad_Get_Data_From_buffer(&Pressed_Key) == 1)
[e $ ! == -> ( _Keypad_Get_Data_From_buffer (1 &U F2252 `i -> 1 `i 241  ]
"45
[; ;MW.c: 45:     {
{
"46
[; ;MW.c: 46:         Keypad_Get_Data_From_buffer(&Pressed_Key);
[e ( _Keypad_Get_Data_From_buffer (1 &U F2252 ]
"47
[; ;MW.c: 47:     }
}
[e :U 241 ]
"49
[; ;MW.c: 49:      if(Current_Count_State == Count_Time)
[e $ ! == -> _Current_Count_State `ui -> . `E2131 2 `ui 242  ]
"50
[; ;MW.c: 50:     {
{
"51
[; ;MW.c: 51:         DO_SetState(Heater , ON);
[e ( _DO_SetState (2 , . `E2174 0 . `E2180 1 ]
"52
[; ;MW.c: 52:         DO_SetState(Motor , ON);
[e ( _DO_SetState (2 , . `E2174 1 . `E2180 1 ]
"53
[; ;MW.c: 53:         Toggle_Lamps();
[e ( _Toggle_Lamps ..  ]
"54
[; ;MW.c: 54:     }else
}
[e $U 243  ]
[e :U 242 ]
"55
[; ;MW.c: 55:     {
{
"56
[; ;MW.c: 56:         DO_SetState(Heater , OFF);
[e ( _DO_SetState (2 , . `E2174 0 . `E2180 0 ]
"57
[; ;MW.c: 57:         DO_SetState(Motor , OFF);
[e ( _DO_SetState (2 , . `E2174 1 . `E2180 0 ]
"58
[; ;MW.c: 58:         DO_SetState(Lamp_1 , OFF);
[e ( _DO_SetState (2 , . `E2174 2 . `E2180 0 ]
"59
[; ;MW.c: 59:         DO_SetState(Lamp_2 , OFF);
[e ( _DO_SetState (2 , . `E2174 3 . `E2180 0 ]
"61
[; ;MW.c: 61:         if(Current_Count_State == Wait_Door)
[e $ ! == -> _Current_Count_State `ui -> . `E2131 1 `ui 244  ]
"62
[; ;MW.c: 62:         {
{
"63
[; ;MW.c: 63:             DO_SetState(Lamp_1 , ON);
[e ( _DO_SetState (2 , . `E2174 2 . `E2180 1 ]
"64
[; ;MW.c: 64:         }
}
[e :U 244 ]
"65
[; ;MW.c: 65:     }
}
[e :U 243 ]
"68
[; ;MW.c: 68:     if(SW_GetState(WEIGHT_SW) == SW_PRESSED)
[e $ ! == -> ( _SW_GetState (1 . `E2189 1 `ui -> . `E2193 2 `ui 245  ]
"69
[; ;MW.c: 69:     {
{
"70
[; ;MW.c: 70:         Weight_State = Pressed;
[e = _Weight_State . `E2127 1 ]
"71
[; ;MW.c: 71:     }
}
[e :U 245 ]
"72
[; ;MW.c: 72:     if(Weight_State == Pressed)
[e $ ! == -> _Weight_State `ui -> . `E2127 1 `ui 246  ]
"73
[; ;MW.c: 73:     {
{
"74
[; ;MW.c: 74:         if(SW_GetState(DOOR_SW) == SW_PRESSED)
[e $ ! == -> ( _SW_GetState (1 . `E2189 0 `ui -> . `E2193 2 `ui 247  ]
"75
[; ;MW.c: 75:         {
{
"76
[; ;MW.c: 76:             Door_State = Pressed;
[e = _Door_State . `E2127 1 ]
"77
[; ;MW.c: 77:         }
}
[e :U 247 ]
"78
[; ;MW.c: 78:     }
}
[e :U 246 ]
"81
[; ;MW.c: 81:         switch(Current_MW_State)
[e $U 249  ]
"82
[; ;MW.c: 82:     {
{
"83
[; ;MW.c: 83:         case WELCOME :
[e :U 250 ]
"85
[; ;MW.c: 85:             Set_Disp_State(WELCOME);
[e ( _Set_Disp_State (1 . `E2117 0 ]
"88
[; ;MW.c: 88:             if(Pressed_Key != Key_INIT)
[e $ ! != -> F2252 `i -> . `E2204 12 `i 251  ]
"89
[; ;MW.c: 89:             {
{
"90
[; ;MW.c: 90:                 Current_MW_State = SCAN_MIN_TENS;
[e = _Current_MW_State . `E2117 1 ]
"91
[; ;MW.c: 91:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"92
[; ;MW.c: 92:                 LCD_Clear();
[e ( _LCD_Clear ..  ]
"93
[; ;MW.c: 93:             }
}
[e :U 251 ]
"95
[; ;MW.c: 95:             break;
[e $U 248  ]
"96
[; ;MW.c: 96:         case SCAN_MIN_TENS:
[e :U 252 ]
"98
[; ;MW.c: 98:             Set_Disp_State(SCAN_MIN_TENS);
[e ( _Set_Disp_State (1 . `E2117 1 ]
"100
[; ;MW.c: 100:             if((Pressed_Key == KEY_START)&&(Time_Val != 0))
[e $ ! && == -> F2252 `i -> . `E2204 11 `i != _Time_Val -> -> 0 `i `ui 253  ]
"101
[; ;MW.c: 101:             {
{
"102
[; ;MW.c: 102:                 Current_MW_State = START_COUNT;
[e = _Current_MW_State . `E2117 5 ]
"103
[; ;MW.c: 103:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"104
[; ;MW.c: 104:                 return;
[e $UE 239  ]
"105
[; ;MW.c: 105:             }
}
[e $U 254  ]
"106
[; ;MW.c: 106:             else if (Pressed_Key == KEY_CANCEL)
[e :U 253 ]
[e $ ! == -> F2252 `i -> . `E2204 10 `i 255  ]
"107
[; ;MW.c: 107:             {
{
"108
[; ;MW.c: 108:                 Current_MW_State = CANCEL;
[e = _Current_MW_State . `E2117 6 ]
"109
[; ;MW.c: 109:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"110
[; ;MW.c: 110:                 return;
[e $UE 239  ]
"111
[; ;MW.c: 111:             }
}
[e $U 256  ]
"112
[; ;MW.c: 112:             else if((Pressed_Key != Key_INIT)&&(Pressed_Key!= KEY_START))
[e :U 255 ]
[e $ ! && != -> F2252 `i -> . `E2204 12 `i != -> F2252 `i -> . `E2204 11 `i 257  ]
"113
[; ;MW.c: 113:             {
{
"114
[; ;MW.c: 114:                 if(Pressed_Key >= key_6)
[e $ ! >= -> F2252 `i -> . `E2204 6 `i 258  ]
"115
[; ;MW.c: 115:                 {
{
"116
[; ;MW.c: 116:                     Min_Ten_val = key_5;
[e = F2249 -> . `E2204 5 `uc ]
"117
[; ;MW.c: 117:                 }
}
[e $U 259  ]
"118
[; ;MW.c: 118:                 else
[e :U 258 ]
"119
[; ;MW.c: 119:                 {
{
"120
[; ;MW.c: 120:                     Min_Ten_val = Pressed_Key;
[e = F2249 F2252 ]
"121
[; ;MW.c: 121:                 }
}
[e :U 259 ]
"122
[; ;MW.c: 122:                 Current_MW_State = SCAN_MIN_UNITS;
[e = _Current_MW_State . `E2117 2 ]
"123
[; ;MW.c: 123:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"124
[; ;MW.c: 124:                 Set_Time( Min_Ten_val , Min_Unit_val , Sec_Ten_val , Sec_Unit_val );
[e ( _Set_Time (4 , , , F2249 F2248 F2251 F2250 ]
"125
[; ;MW.c: 125:             }
}
[e :U 257 ]
[e :U 256 ]
[e :U 254 ]
"126
[; ;MW.c: 126:             break;
[e $U 248  ]
"128
[; ;MW.c: 128:         case SCAN_MIN_UNITS:
[e :U 260 ]
"130
[; ;MW.c: 130:             Set_Disp_State(SCAN_MIN_UNITS);
[e ( _Set_Disp_State (1 . `E2117 2 ]
"131
[; ;MW.c: 131:             if((Pressed_Key == KEY_START)&&(Time_Val != 0))
[e $ ! && == -> F2252 `i -> . `E2204 11 `i != _Time_Val -> -> 0 `i `ui 261  ]
"132
[; ;MW.c: 132:             {
{
"133
[; ;MW.c: 133:                 Current_MW_State = START_COUNT;
[e = _Current_MW_State . `E2117 5 ]
"134
[; ;MW.c: 134:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"135
[; ;MW.c: 135:                 return;
[e $UE 239  ]
"136
[; ;MW.c: 136:             }
}
[e $U 262  ]
"137
[; ;MW.c: 137:             else if (Pressed_Key == KEY_CANCEL)
[e :U 261 ]
[e $ ! == -> F2252 `i -> . `E2204 10 `i 263  ]
"138
[; ;MW.c: 138:             {
{
"139
[; ;MW.c: 139:                 Current_MW_State = CANCEL;
[e = _Current_MW_State . `E2117 6 ]
"140
[; ;MW.c: 140:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"141
[; ;MW.c: 141:                 return;
[e $UE 239  ]
"142
[; ;MW.c: 142:             }
}
[e $U 264  ]
"143
[; ;MW.c: 143:             else if((Pressed_Key != Key_INIT)&&(Pressed_Key!= KEY_START))
[e :U 263 ]
[e $ ! && != -> F2252 `i -> . `E2204 12 `i != -> F2252 `i -> . `E2204 11 `i 265  ]
"144
[; ;MW.c: 144:             {
{
"145
[; ;MW.c: 145:                 Min_Unit_val = Pressed_Key;
[e = F2248 F2252 ]
"146
[; ;MW.c: 146:                 Current_MW_State = SCAN_SEC_TENS;
[e = _Current_MW_State . `E2117 3 ]
"147
[; ;MW.c: 147:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"148
[; ;MW.c: 148:                 Set_Time( Min_Ten_val , Min_Unit_val , Sec_Ten_val , Sec_Unit_val );
[e ( _Set_Time (4 , , , F2249 F2248 F2251 F2250 ]
"149
[; ;MW.c: 149:             }
}
[e :U 265 ]
[e :U 264 ]
[e :U 262 ]
"150
[; ;MW.c: 150:             break;
[e $U 248  ]
"152
[; ;MW.c: 152:         case SCAN_SEC_TENS:
[e :U 266 ]
"153
[; ;MW.c: 153:             Set_Disp_State(SCAN_SEC_TENS);
[e ( _Set_Disp_State (1 . `E2117 3 ]
"154
[; ;MW.c: 154:             if((Pressed_Key== KEY_START)&&(Time_Val != 0))
[e $ ! && == -> F2252 `i -> . `E2204 11 `i != _Time_Val -> -> 0 `i `ui 267  ]
"155
[; ;MW.c: 155:             {
{
"156
[; ;MW.c: 156:                 Current_MW_State = START_COUNT;
[e = _Current_MW_State . `E2117 5 ]
"157
[; ;MW.c: 157:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"158
[; ;MW.c: 158:                 return;
[e $UE 239  ]
"159
[; ;MW.c: 159:             }
}
[e $U 268  ]
"160
[; ;MW.c: 160:             else if (Pressed_Key == KEY_CANCEL)
[e :U 267 ]
[e $ ! == -> F2252 `i -> . `E2204 10 `i 269  ]
"161
[; ;MW.c: 161:             {
{
"162
[; ;MW.c: 162:                 Current_MW_State = CANCEL;
[e = _Current_MW_State . `E2117 6 ]
"163
[; ;MW.c: 163:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"164
[; ;MW.c: 164:                 return;
[e $UE 239  ]
"165
[; ;MW.c: 165:             }
}
[e $U 270  ]
"166
[; ;MW.c: 166:             else if((Pressed_Key != Key_INIT)&&(Pressed_Key!= KEY_START))
[e :U 269 ]
[e $ ! && != -> F2252 `i -> . `E2204 12 `i != -> F2252 `i -> . `E2204 11 `i 271  ]
"167
[; ;MW.c: 167:             {
{
"168
[; ;MW.c: 168:                 if(Pressed_Key >= key_6)
[e $ ! >= -> F2252 `i -> . `E2204 6 `i 272  ]
"169
[; ;MW.c: 169:                 {
{
"170
[; ;MW.c: 170:                     Sec_Ten_val = key_5;
[e = F2251 -> . `E2204 5 `uc ]
"171
[; ;MW.c: 171:                 }
}
[e $U 273  ]
"172
[; ;MW.c: 172:                 else
[e :U 272 ]
"173
[; ;MW.c: 173:                 {
{
"174
[; ;MW.c: 174:                     Sec_Ten_val = Pressed_Key;
[e = F2251 F2252 ]
"175
[; ;MW.c: 175:                 }
}
[e :U 273 ]
"176
[; ;MW.c: 176:                 Current_MW_State = SCAN_SEC_UNITS;
[e = _Current_MW_State . `E2117 4 ]
"177
[; ;MW.c: 177:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"178
[; ;MW.c: 178:                 Set_Time( Min_Ten_val , Min_Unit_val , Sec_Ten_val , Sec_Unit_val );
[e ( _Set_Time (4 , , , F2249 F2248 F2251 F2250 ]
"179
[; ;MW.c: 179:             }
}
[e :U 271 ]
[e :U 270 ]
[e :U 268 ]
"180
[; ;MW.c: 180:             break;
[e $U 248  ]
"182
[; ;MW.c: 182:         case SCAN_SEC_UNITS:
[e :U 274 ]
"183
[; ;MW.c: 183:             Set_Disp_State(SCAN_SEC_UNITS);
[e ( _Set_Disp_State (1 . `E2117 4 ]
"184
[; ;MW.c: 184:             if((Pressed_Key == KEY_START)&&(Time_Val != 0))
[e $ ! && == -> F2252 `i -> . `E2204 11 `i != _Time_Val -> -> 0 `i `ui 275  ]
"185
[; ;MW.c: 185:             {
{
"186
[; ;MW.c: 186:                 Current_MW_State = START_COUNT;
[e = _Current_MW_State . `E2117 5 ]
"187
[; ;MW.c: 187:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"188
[; ;MW.c: 188:                 return;
[e $UE 239  ]
"189
[; ;MW.c: 189:             }
}
[e $U 276  ]
"190
[; ;MW.c: 190:             else if (Pressed_Key == KEY_CANCEL)
[e :U 275 ]
[e $ ! == -> F2252 `i -> . `E2204 10 `i 277  ]
"191
[; ;MW.c: 191:             {
{
"192
[; ;MW.c: 192:                 Current_MW_State = CANCEL;
[e = _Current_MW_State . `E2117 6 ]
"193
[; ;MW.c: 193:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"194
[; ;MW.c: 194:                 return;
[e $UE 239  ]
"195
[; ;MW.c: 195:             }
}
[e $U 278  ]
"196
[; ;MW.c: 196:             else if((Pressed_Key != Key_INIT)&&(Pressed_Key!= KEY_START))
[e :U 277 ]
[e $ ! && != -> F2252 `i -> . `E2204 12 `i != -> F2252 `i -> . `E2204 11 `i 279  ]
"197
[; ;MW.c: 197:             {
{
"198
[; ;MW.c: 198:                 Sec_Unit_val = Pressed_Key;
[e = F2250 F2252 ]
"199
[; ;MW.c: 199:                 Set_Time( Min_Ten_val , Min_Unit_val , Sec_Ten_val , Sec_Unit_val );
[e ( _Set_Time (4 , , , F2249 F2248 F2251 F2250 ]
"200
[; ;MW.c: 200:             }
}
[e :U 279 ]
[e :U 278 ]
[e :U 276 ]
"202
[; ;MW.c: 202:             break;
[e $U 248  ]
"204
[; ;MW.c: 204:         case START_COUNT :
[e :U 280 ]
"206
[; ;MW.c: 206:             if (Pressed_Key == KEY_CANCEL)
[e $ ! == -> F2252 `i -> . `E2204 10 `i 281  ]
"207
[; ;MW.c: 207:             {
{
"208
[; ;MW.c: 208:                 if(Current_Count_State == Count_Time)
[e $ ! == -> _Current_Count_State `ui -> . `E2131 2 `ui 282  ]
"209
[; ;MW.c: 209:                 {
{
"210
[; ;MW.c: 210:                     Current_Count_State = Pause_Time;
[e = _Current_Count_State . `E2131 3 ]
"211
[; ;MW.c: 211:                 }
}
[e $U 283  ]
"212
[; ;MW.c: 212:                 else
[e :U 282 ]
"213
[; ;MW.c: 213:                 {
{
"214
[; ;MW.c: 214:                     Current_Count_State = Reset_Time;
[e = _Current_Count_State . `E2131 4 ]
"215
[; ;MW.c: 215:                 }
}
[e :U 283 ]
"216
[; ;MW.c: 216:                 Current_MW_State = CANCEL;
[e = _Current_MW_State . `E2117 6 ]
"217
[; ;MW.c: 217:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"218
[; ;MW.c: 218:                 return;
[e $UE 239  ]
"219
[; ;MW.c: 219:             }
}
[e :U 281 ]
"221
[; ;MW.c: 221:             Set_Disp_State(START_COUNT);
[e ( _Set_Disp_State (1 . `E2117 5 ]
"222
[; ;MW.c: 222:             if(Weight_State != Pressed)
[e $ ! != -> _Weight_State `ui -> . `E2127 1 `ui 284  ]
"223
[; ;MW.c: 223:             {
{
"224
[; ;MW.c: 224:                 Current_Count_State = Wait_Food;
[e = _Current_Count_State . `E2131 0 ]
"225
[; ;MW.c: 225:                 return;
[e $UE 239  ]
"226
[; ;MW.c: 226:             }
}
[e :U 284 ]
"227
[; ;MW.c: 227:             if (Door_State != Pressed)
[e $ ! != -> _Door_State `ui -> . `E2127 1 `ui 285  ]
"228
[; ;MW.c: 228:             {
{
"229
[; ;MW.c: 229:                 Current_Count_State = Wait_Door;
[e = _Current_Count_State . `E2131 1 ]
"230
[; ;MW.c: 230:                 return;
[e $UE 239  ]
"231
[; ;MW.c: 231:             }
}
[e :U 285 ]
"233
[; ;MW.c: 233:             Current_Count_State = Count_Time;
[e = _Current_Count_State . `E2131 2 ]
"234
[; ;MW.c: 234:             if(Is_Finished () == 1)
[e $ ! == -> ( _Is_Finished ..  `i -> 1 `i 286  ]
"235
[; ;MW.c: 235:             {
{
"236
[; ;MW.c: 236:                 Current_Count_State = Finish_Time;
[e = _Current_Count_State . `E2131 5 ]
"237
[; ;MW.c: 237:                 Current_MW_State = FINISHED;
[e = _Current_MW_State . `E2117 7 ]
"238
[; ;MW.c: 238:             }
}
[e :U 286 ]
"239
[; ;MW.c: 239:             break;
[e $U 248  ]
"241
[; ;MW.c: 241:         case CANCEL :
[e :U 287 ]
"243
[; ;MW.c: 243:             Set_Disp_State(CANCEL);
[e ( _Set_Disp_State (1 . `E2117 6 ]
"245
[; ;MW.c: 245:              if(Current_Count_State == Reset_Time)
[e $ ! == -> _Current_Count_State `ui -> . `E2131 4 `ui 288  ]
"246
[; ;MW.c: 246:             {
{
"247
[; ;MW.c: 247:                 Min_Unit_val = 0;
[e = F2248 -> -> 0 `i `uc ]
"248
[; ;MW.c: 248:                 Min_Ten_val = 0;
[e = F2249 -> -> 0 `i `uc ]
"249
[; ;MW.c: 249:                 Sec_Unit_val = 0;
[e = F2250 -> -> 0 `i `uc ]
"250
[; ;MW.c: 250:                 Sec_Ten_val = 0;
[e = F2251 -> -> 0 `i `uc ]
"251
[; ;MW.c: 251:                 Set_Time( Min_Ten_val , Min_Unit_val , Sec_Ten_val , Sec_Unit_val );
[e ( _Set_Time (4 , , , F2249 F2248 F2251 F2250 ]
"252
[; ;MW.c: 252:                 Current_MW_State = WELCOME;
[e = _Current_MW_State . `E2117 0 ]
"254
[; ;MW.c: 254:                 Weight_State = Released;
[e = _Weight_State . `E2127 0 ]
"255
[; ;MW.c: 255:                 Door_State = Released;
[e = _Door_State . `E2127 0 ]
"256
[; ;MW.c: 256:                 Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"257
[; ;MW.c: 257:             }
}
[e $U 289  ]
"258
[; ;MW.c: 258:              else if(Current_Count_State == Pause_Time)
[e :U 288 ]
[e $ ! == -> _Current_Count_State `ui -> . `E2131 3 `ui 290  ]
"259
[; ;MW.c: 259:             {
{
"260
[; ;MW.c: 260:                 if (Pressed_Key == KEY_START)
[e $ ! == -> F2252 `i -> . `E2204 11 `i 291  ]
"261
[; ;MW.c: 261:                 {
{
"262
[; ;MW.c: 262:                    Current_MW_State = START_COUNT;
[e = _Current_MW_State . `E2117 5 ]
"263
[; ;MW.c: 263:                     Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"264
[; ;MW.c: 264:                 }
}
[e :U 291 ]
"265
[; ;MW.c: 265:                 if (Pressed_Key == KEY_CANCEL)
[e $ ! == -> F2252 `i -> . `E2204 10 `i 292  ]
"266
[; ;MW.c: 266:                 {
{
"267
[; ;MW.c: 267:                     Current_Count_State = Reset_Time;
[e = _Current_Count_State . `E2131 4 ]
"268
[; ;MW.c: 268:                     Pressed_Key = Key_INIT;
[e = F2252 -> . `E2204 12 `uc ]
"269
[; ;MW.c: 269:                 }
}
[e :U 292 ]
"270
[; ;MW.c: 270:             }
}
[e :U 290 ]
[e :U 289 ]
"271
[; ;MW.c: 271:             break;
[e $U 248  ]
"273
[; ;MW.c: 273:         case FINISHED :
[e :U 293 ]
"275
[; ;MW.c: 275:             Set_LCD_BUFFER1(" Heating         ");
[e ( _Set_LCD_BUFFER1 (1 :s 1C ]
"276
[; ;MW.c: 276:             Set_LCD_BUFFER2("    Is Finished  ");
[e ( _Set_LCD_BUFFER2 (1 :s 2C ]
"278
[; ;MW.c: 278:             Weight_State = Released;
[e = _Weight_State . `E2127 0 ]
"279
[; ;MW.c: 279:             Door_State = Released;
[e = _Door_State . `E2127 0 ]
"280
[; ;MW.c: 280:             break;
[e $U 248  ]
"282
[; ;MW.c: 282:         default :
[e :U 294 ]
"283
[; ;MW.c: 283:             break;
[e $U 248  ]
"284
[; ;MW.c: 284:     }
}
[e $U 248  ]
[e :U 249 ]
[e [\ -> _Current_MW_State `ui , $ -> . `E2117 0 `ui 250
 , $ -> . `E2117 1 `ui 252
 , $ -> . `E2117 2 `ui 260
 , $ -> . `E2117 3 `ui 266
 , $ -> . `E2117 4 `ui 274
 , $ -> . `E2117 5 `ui 280
 , $ -> . `E2117 6 `ui 287
 , $ -> . `E2117 7 `ui 293
 294 ]
[e :U 248 ]
"286
[; ;MW.c: 286: }
[e :UE 239 ]
}
[a 2C 32 32 32 32 73 115 32 70 105 110 105 115 104 101 100 32 32 0 ]
[a 1C 32 72 101 97 116 105 110 103 32 32 32 32 32 32 32 32 32 0 ]
